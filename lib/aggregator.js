// Generated by CoffeeScript 1.7.1
(function() {
  var Aggregator, d3;

  d3 = require('d3');

  Aggregator = (function() {
    function Aggregator() {
      this.cache = {};
    }

    Aggregator.prototype.flushTo = function(queue) {
      var metric, name, obj, source, values, _ref, _ref1, _results;
      _ref = this.cache;
      _results = [];
      for (metric in _ref) {
        values = _ref[metric];
        _ref1 = metric.split(';'), name = _ref1[0], source = _ref1[1];
        values.sort();
        obj = {
          name: name,
          count: values.length,
          sum: d3.sum(values),
          max: d3.max(values),
          min: d3.min(values),
          sum_squares: d3.sum(values, function(value) {
            return Math.pow(value, 2);
          })
        };
        if (source != null) {
          obj.source = source;
        }
        queue.push(obj);
        _results.push(delete this.cache[metric]);
      }
      return _results;
    };

    Aggregator.prototype.timing = function(name, value) {
      var _base;
      return ((_base = this.cache)[name] != null ? _base[name] : _base[name] = []).push(value);
    };

    return Aggregator;

  })();

  module.exports = Aggregator;

}).call(this);
