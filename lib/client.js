// Generated by CoffeeScript 1.6.3
(function() {
  var Client, packageJson, request, util;

  request = require('request');

  util = require('util');

  packageJson = require('../package.json');

  Client = (function() {
    Client.prototype.endpoint = 'https://metrics-api.librato.com/v1';

    function Client(_arg) {
      var email, token;
      email = _arg.email, token = _arg.token;
      if (!email || !token) {
        console.warn("librato-node metrics disabled: no email or token provided.");
      } else {
        this._authHeader = 'Basic ' + new Buffer("" + email + ":" + token).toString('base64');
      }
    }

    Client.prototype.send = function(json, cb) {
      var requestOptions, uri;
      if (!this._authHeader) {
        return;
      }
      if (json.annotation) {
        uri = "" + this.endpoint + "/annotations/" + json.name;
        json = json.body;
      } else {
        uri = "" + this.endpoint + "/metrics";
      }
      requestOptions = {
        method: 'POST',
        uri: uri,
        json: json,
        headers: {
          authorization: this._authHeader,
          'user-agent': 'librato-node/' + packageJson.version
        }
      };
      return request(requestOptions, function(err, res, body) {
        if (err != null) {
          return cb(err);
        }
        if (res.statusCode > 399 || ((body != null ? body.errors : void 0) != null)) {
          return cb(new Error("Error sending to Librato: " + (util.inspect(body)) + " (statusCode: " + res.statusCode + ")"));
        }
        return cb(null, body);
      });
    };

    return Client;

  })();

  module.exports = Client;

}).call(this);
